buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
}

task genJaxb {
          
    ext.sourcesDir =  "${buildDir}/generated-sources/jaxb"
    
    ext.classesDir = "${buildDir}/classes/jaxb"
    
    outputs.dir classesDir

    doLast() {
            
        project.ant {
      
            mkdir(dir: sourcesDir)
    
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
          
            delete(dir: sourcesDir)
            mkdir(dir: sourcesDir)
          
            xjc(destdir: sourcesDir, schema: "src/main/resources/processOrder.xsd",
                     package: "ar.com.directv.test.spring.integration.ws.types", removeOldOutput: true, header: false) {                
                    arg(value: "-wsdl")
                    produces(dir: sourcesDir, includes: "**/*.java")
            }
            copy(todir: "${projectDir}/src/main/java") {
                    fileset(dir: sourcesDir, erroronmissingdir: false){
                        exclude(name: "**/*.class")
                   }
            }       
          
            
            
        }
    }
}

configurations {
    jaxb
}

jar {
    baseName = 'gs-producing-web-service'
    version =  '0.1.0'
    from genJaxb.classesDir
}

// tag::dependencies[]
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web-services")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile("wsdl4j:wsdl4j:1.6.1")
    jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
   }
// end::dependencies[]
// end::jaxb[]

